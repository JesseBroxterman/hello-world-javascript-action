name: Increment semantic version
on:
  pull_request:
    types:
      - closed  
jobs:
  increment-version:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Get Current Version
        run: CURRENT_VERSION=$(git describe --tags --abbrev=0) >> "$GITHUB_ENV"
      
      - name: Bump Minor
        if: contains(github.event.pull_request.labels.*.name, 'enhancement'
        run: MINOR_BUMP=true 
          
      - name: Bump Patch
        if: contains(github.event.pull_request.labels.*.name, 'bug'
        run: PATCH_BUMP=true 
      
      - name: Parse major
        uses: actions/github-script@v5
        id: parse-major
        with:
          script: |
            const current_version= process.env.CURRENT_VERSION;
            
            // Regular expression to extract major, minor, and patch components
            const versionRegex = /^(\d+)\.(\d+)\.(\d+)$/;

            const [, major, minor, patch] = current_version.match(versionRegex);

            console.log(`major=${major}`);
            return major;
            
      - name: Parse and bump minor
        uses: actions/github-script@v5
        id: parse-minor
        with:
          script: |
            const current_version= process.env.CURRENT_VERSION;
            const minor_bump = process.env.MINOR_BUMP;
            
            // Regular expression to extract major, minor, and patch components
            const versionRegex = /^(\d+)\.(\d+)\.(\d+)$/;

            const [, major, minor, patch] = current_version.match(versionRegex);

            if (minor_bump = 'true') {
              minor = minor + 1;
            }
            return minor;            
            
      - name: Parse and bump patch
        uses: actions/github-script@v5
        id: parse-patch
        with:
          script: |
            const current_version= process.env.CURRENT_VERSION;
            const minor_bump = process.env.MINOR_BUMP;
            const patch_bump = process.env.PATCH_BUMP;            
            
            // Regular expression to extract major, minor, and patch components
            const versionRegex = /^(\d+)\.(\d+)\.(\d+)$/;

            const [, major, minor, patch] = current_version.match(versionRegex);

            if (patch_bump = 'true') {
              patch = patch + 1;
            } 

            if (minor_bump = 'true') {
              patch = 0;
            } 
            return patch;                              
         
         
      - name: Assign new version tag
        run: |
          echo "major = ${{ steps.parse-major.outputs.result }}"
          echo "minor = ${{ steps.parse-minor.outputs.result }}"
          echo "patch = ${{ steps.parse-patch.outputs.result }}"
   

            
            




